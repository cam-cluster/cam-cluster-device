#FROM balenalib/%%BALENA_MACHINE_NAME%%-python:3-stretch-run
#
## Set our working directory
#WORKDIR /usr/src/app
#
## Copy requirements.txt first for better cache on later pushes
#COPY requirements.txt requirements.txt
#
## pip install python deps from requirements.txt on the resin.io build server
#RUN pip install -r requirements.txt
#
## This will copy all files in our root to the working  directory in the container
#COPY . ./
#
## Enable udevd so that plugged dynamic hardware devices show up in our container.
#ENV UDEV=1
#
## main.py will run when container starts up on the device
##CMD ["python","-u","test-scripts/test_http_server.py"]
##CMD ["python","-u","test-scripts/test_websocket_client.py"]
#CMD ["python","-u","test-scripts/test_server_with_wsclient.py"]
#
### Old Dockerfile
FROM balenalib/%%BALENA_MACHINE_NAME%%-python:3-stretch-run

ENV INITSYSTEM on

# Enable udevd so that plugged dynamic hardware devices show up in our container.
ENV UDEV=1

COPY requirements.txt requirements.txt
RUN READTHEDOCS=True pip install -r requirements.txt

WORKDIR /usr/src/app
COPY . ./

# server.js will run when container starts up on the device
#CMD [ "python", "-u", "src/picamdevice.py" ]
#CMD [ "python", "-u", "test-scripts/test_register.py" ]
CMD [ "python", "-u", "test-scripts/test_camera_stream.py" ]
